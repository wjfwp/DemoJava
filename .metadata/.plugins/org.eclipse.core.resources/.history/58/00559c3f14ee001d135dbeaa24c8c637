package quiz21;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MainClass {

	public static void main(String[] args) {
		
		//지역명, 규모구분, 연도, 월 , 분양가격 -> 1행 x 4800개
		/* 만약에 연계데이터(다른회사에서 매 일정시에 전송되는 데이터)
		 * 
		 * 1. 버퍼리더 이용해서 한줄씩 읽습니다.
		 * 2. split(",", 5) 를 사용하여 Data객체에 한줄 단위로 저장을 하고
		 * 3. List<Data>에 하나씩 추가를 합니다.
		 * 
		 * 4. 람다식을 이용해서 (지역:서울, 4분기중 9~12월, 분양가격: 2000이상)인 객체만 뽑아서
		 *    새로운 리스트로 반환.
		 */
		
		
		// 선생님 풀이
		
		List<Data> list = new ArrayList<>(); //저장할 리스트
		
		String path = "C:\\Users\\user\\Desktop\\course\\Java\\work\\Quiz\\src\\quiz21\\주택도시보증공사_전국 평균 분양가격.csv";
		
		try(BufferedReader br = new BufferedReader( new InputStreamReader( new FileInputStream(path) , "EUC-KR" ))) {
			
			br.readLine(); //(제목행) 한번 넘어감
			
			String str;
			while((str = br.readLine() ) != null) {

				String[] arr = str.split(",", 5);
				
				String region = arr[0];
				String size = arr[1];
				String year = arr[2];
				String month = arr[3];
				String price = arr[4].replace(" ", "").replace(",", "").replace("\"", "");
				
				price = price.equals("")? "0" : price; //공백이라면, "0" 대입 : 그대로 
				
				System.out.println( Integer.parseInt(price));
				
				Data data = new Data(region, size, year, month, price);
				list.add(data); //리스트에 추가
				
			}
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
		
		
		
		
		
		
		
		/* 내 풀이
		 * 
		String path = "C:\\Users\\user\\Desktop\\course\\Java\\file\\주택도시보증공사_전국 평균 분양가격.csv";
		
		try(BufferedReader br = new BufferedReader( new FileReader(path) ) ) {
			
			List<Data> list = new ArrayList<>();
			
			String result;
			
			while( (result = br.readLine()) != null) {
				String[] arr = result.split(",", 5);
				Data d = new Data(arr[0], arr[1], arr[2], arr[3], arr[4]);
				list.add(d);
			}
			
			List<Data> newList = list.stream()
									 .filter( (a) -> {a.getRegion().equals("서울");
										 
									 
									 } );
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		*/
		
		
		
		
		
	}
}
